<?php
?>
<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport"
		  content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<title>Циклы</title>
</head>
<body>
     <h1>Циклы</h1>
<p>Цикл - управляющая конструкция предназначенная для многократного исполнения набора инструкций</p>
<p>Поселдовательность инструкций, предназначенных для многократного исполнения называется - телом цикла</p>
<p>Одно выполнение тела цикла наызвается - итерацией</p>

	 <hr>
	 <hr>
	 
	 
<h5>Разновидности циклов в PHP</h5>
<ul>
	<li> Цикл с предусловием  (while)</li>
	<li>Цикл с пост условием (do-while)</li>
	<li>Цикл со счетчиком (for)</li>
	<li>Специальный цикл перебора массивов (foreach)</li>
</ul>
	 <hr>
	 <hr>
	 
 <h4>Цикл с предусловием (while)</h4>
   <p>while (условие) {тело цикла;}</p>
	<p>Цикл указывает, что тело цикла нужно выполнять до тех пор, пока соблюдается условие, т.е. условие = true.
		<br>Условие будет проверяться перед каждой итерацией.
		<br>Если на какой-то итерации условие не будет соблюдаться - цикл закончиться
	    <br> Если условие не соблюдается в первой итерации - то цикл будет не выполнен ни разу
	</p>
     <hr>

	<?php
	$i = 1;
		// 1 <= 10 : TRUE
		// 2 <= 10 : TRUE
		//.....
		//11 <= 10 : FALSE
	while ($i <=10) {
		echo $i;
		echo '<br>';
		$i = $i + 1;   // если убрать данное условие то при i = 1 - получиться вечный цикл - СЛЕДУЕТ ИЗБЕАГТЬ!!!!
	}
	  echo 'Конец программы';
	?>

	 <hr>
	 <hr>

	 <h4>Цикл с предусловием (do-while)</h4>
	 <p>do {тело цикла;} while (условие) / условие цикла проверяется в конце цикла а не в начале  <br> Т.о. первая итерация цикла будет гарантированно выполнена</p>

       <hr>

	<?php
	$i = 1;

	do {
		echo $i;
		$i = $i +1;
	}  while ($i <= 10);
		
	 echo 'Конец программы';

	?>
	 <hr>
	 <hr>
	 <h4>Операторы инкримента / дикримента</h4>
	<p>$i = $i +1 ;</p>
<ul>
	<li>++ (инкримент) - увеличивает значение переменной на 1</li>
	<li>-- (дикримент) - уменьшает значение переменной на 1</li>
</ul>
     <p>$i++</p>

<ul>
	<li>PRE инкремент / декремент ++$i, --$i //Изначально увеличивает значение , после подстваляет в строку</li>
	<li>POST инкремент / декремент $i++, $i-- //изначально возвращает значение , а после увеличивает не 1(подставляет в строку)</li>
</ul>
     <hr>
	<?php
	   echo 'Постфиксный инкримент ';
	   $a = 5;
	   echo "Должно быть 5:" . $a++ . "<br>"; //Изначально возвращает значение переменной
	   echo "Должно быть 6:" . $a . "<br>";// только после увеличивает на 1 (подставляет в строку)
	   
	?>
        <hr>
	 <?php
		 echo 'Префиксный инкримент ';
		 $a = 5;
		 echo "Должно быть 6:" . ++$a . "<br>"; // Изначально увеличивает на 1
		 echo "Должно быть 6:" . $a . "<br>";   // ПОсле подставляет в строку

	 ?>

        <hr>
        <hr>
         <h3>Цикл со счетчиком (for)</h3>
     <p>Синтаксис: for(выражение1; выражение2; выражение3) {тело цикла;}</p>
      <p>выражение1 - выполняется тоьлко один раз в начале цикла<br>
	  	выражение2 - условие цикла, проверяется перед каждой итерацией <br>
		выражение3 - выполняется в конце каждой итерации
	  </p>
       <p>иногда выражения могут быть пустыми</p>

	<hr>
	<?php
	for($i=1; $i<=10; $i++){
		echo $i;
	}
	?>
       <hr>
     <?php
	 $students = [
	 	 array('name' => 'Viktor', 'app'=> 75), //0
		 array('name' => 'Vasya', 'app'=> 55),  //1
		 array('name' => 'Sasha', 'app'=> 15),  //2
		 array('name' => 'Piter', 'app'=> 20),  //3
		 array('name' => 'Semen', 'app'=> 43),  //4
		 array('name' => 'Ivan', 'app'=> 56),   //5
		 
	 ];
	 
	 for ($i=0; $i < (count($students)); $i++){
	  
	 	echo ($students[$i]['name'] . ' кв. № ' . $students[$i]['app']) . "<br>";
	 }
	 ?>
       <hr>
       <hr>
	<h3>Специальный цикл перебора массивов (foreach)</h3>
	<p>foreach($array as $value){тело цикла;}</p>
	 <p>на вход поступает массив, тело цикла будет выполнено ровно столько раз, сколько элементов в массиве, значение текущего элмемента будет присвоено $value</p>
	<p>foreach($array as $key=> $value){тело цикла;}</p>
	<p> в данном случае, индекс элемента массива попадает в переменную $key</p>
	   <hr>
	 <?php
		 $students = [
			 array('name' => 'Viktor', 'app'=> 75), //0
			 array('name' => 'Vasya', 'app'=> 55),  //1
			 array('name' => 'Sasha', 'app'=> 15),  //2
			 array('name' => 'Piter', 'app'=> 20),  //3
			 array('name' => 'Semen', 'app'=> 43),  //4
			 array('name' => 'Ivan', 'app'=> 56),   //5
	
		 ];
	     foreach ($students as $key=>$students){
	     	echo $key .' ' . $students['name'] . 'кв. № '. $students['app'] . '<br>';
		 }
	 ?>
      <hr>
      <hr>
	<h3>Управление циклами: break и continue</h3>
<p>continue - используется внутре циклических структур для пропуска оставшейся части текущих итераций</p>

<h4>Задача</h4>
<p>Нужно вывести все непарные значения от 0 до 50</p>

	<?php
	for($i=0; $i<= 50; $i++){
		
		if (($i % 2) == 0){
		
		continue;
		
		}
		
		echo $i;
		
	}
	?>
	 <hr>
     <p>break - прерывает выполнение текущей структуры for, foreach, while, do-while или switch</p>
	 <?php
		 for($i=0; $i<= 30; $i++){
		
			 if ($i == 31){
			
				 break;
			
			 }
		
			 echo $i;
		
		 }
	 ?>
	 <hr>
	 <hr>
<h3>Альтернативный синтаксис</h3>

     <?php
	 
	 //Для условного оператора
		 
		 if($i ==0){
		 	
		 	echo '0';
		 	
		 } elseif ($i ==1){
		 	
		 	echo '1';
		 	
		 } else {
		 	
		 	echo '?';
		 	
		 }
		 
		 //Равносильно!!!!
		 
		 if ($i==0):
		 
		 	echo '0';
		 elseif ($i == 1):
		 
		 	echo '1';
		 
		 else:
		 
		 	echo '?';
		  
		 endif;   // -  необходимо использовать данную конструкцию!!!!
		 
	      //===================
		 
		 //Для циклов
		 
		 for ($i=0; $i<=50; $i++){
		 	echo $i;
		 }
		 
		 //Равносильно
		 for($i=0; $i<=50; $i++):
		 	echo $i;
		 endfor;
		 
		 foreach ($a as $b):
		 	echo $b;
		 endforeach;
		 
		 while ($i==0):
		 	echo $i;
		 endwhile;
	 ?>










</body>
</html>
